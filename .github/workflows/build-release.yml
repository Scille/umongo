name: build
on:
  push:
    branches: ["master"]
    tags: ["*"]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: python -m pip install tox
      - run: python -m tox -e lint
  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "3.9-pymongo3", python: "3.9", tox: py39-pymongo3 }
          - { name: "3.13-pymongo4", python: "3.13", tox: py313-pymongo4 }
          - { name: "3.9-motor2", python: "3.9", tox: py39-motor2 }
          - { name: "3.13-motor3", python: "3.13", tox: py313-motor3 }
          - { name: "3.9-txmongo", python: "3.9", tox: py39-txmongo }
          - { name: "3.13-txmongo", python: "3.13", tox: py313-txmongo }
    steps:
      - uses: actions/checkout@v5
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: 8.0
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - run: python -m pip install tox
      - run: python -m tox -e ${{ matrix.tox }}
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install pypa/build
        run: python -m pip install build
      - name: Build a binary wheel and a source tarball
        run: python -m build
      - name: Install twine
        run: python -m pip install twine
      - name: Check build
        run: python -m twine check --strict dist/*
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
  publish-to-pypi:
    name: PyPI release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [lint, build, tests]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/marshmallow
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
